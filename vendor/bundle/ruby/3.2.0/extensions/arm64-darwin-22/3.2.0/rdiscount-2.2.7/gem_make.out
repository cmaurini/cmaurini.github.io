current directory: /Users/maurini/Documents/website/cmaurini.github.io/vendor/bundle/ruby/3.2.0/gems/rdiscount-2.2.7/ext
/opt/homebrew/opt/ruby/bin/ruby extconf.rb
checking for random()... yes
checking for srandom()... yes
checking for rand()... yes
checking for srand()... yes
checking size of unsigned long... 8
checking size of unsigned int... 4
checking size of unsigned int... 4
checking size of unsigned short... 2
creating Makefile

current directory: /Users/maurini/Documents/website/cmaurini.github.io/vendor/bundle/ruby/3.2.0/gems/rdiscount-2.2.7/ext
make DESTDIR\= sitearchdir\=./.gem.20230419-34354-7s8eaf sitelibdir\=./.gem.20230419-34354-7s8eaf clean

current directory: /Users/maurini/Documents/website/cmaurini.github.io/vendor/bundle/ruby/3.2.0/gems/rdiscount-2.2.7/ext
make DESTDIR\= sitearchdir\=./.gem.20230419-34354-7s8eaf sitelibdir\=./.gem.20230419-34354-7s8eaf
compiling Csio.c
In file included from Csio.c:5:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
2 warnings generated.
compiling amalloc.c
amalloc.c:24:1: warning: function 'die' could be declared with attribute 'noreturn' [-Wmissing-noreturn]
{
^
amalloc.c:40:14: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    if ( ret = calloc(count + sizeof(struct alist) + sizeof(int), size) ) {
         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
amalloc.c:40:14: note: place parentheses around the assignment to silence this warning
    if ( ret = calloc(count + sizeof(struct alist) + sizeof(int), size) ) {
             ^
         (                                                             )
amalloc.c:40:14: note: use '==' to turn this assignment into an equality comparison
    if ( ret = calloc(count + sizeof(struct alist) + sizeof(int), size) ) {
             ^
             ==
amalloc.c:77:10: warning: passing 'const char[46]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            die("goddam: corrupted memory block %d in free()!\n", p2->index);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
amalloc.c:23:11: note: passing argument to parameter 'msg' here
die(char *msg, int index)
          ^
amalloc.c:96:10: warning: passing 'const char[49]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            die("goddam: corrupted memory block %d in realloc()!\n", p2->index);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
amalloc.c:23:11: note: passing argument to parameter 'msg' here
die(char *msg, int index)
          ^
4 warnings generated.
compiling basename.c
compiling css.c
In file included from css.c:17:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
css.c:79:28: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    written = (size > 0) ? fwrite(res,1,size,f) : 0;
            ~              ^~~~~~~~~~~~~~~~~~~~
3 warnings generated.
compiling docheader.c
In file included from docheader.c:14:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
2 warnings generated.
compiling dumptree.c
In file included from dumptree.c:8:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
dumptree.c:23:29: warning: returning 'const char[11]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case WHITESPACE: return "whitespace";
                            ^~~~~~~~~~~~
dumptree.c:24:29: warning: returning 'const char[5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case CODE      : return "code";
                            ^~~~~~
dumptree.c:25:29: warning: returning 'const char[6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case QUOTE     : return "quote";
                            ^~~~~~~
dumptree.c:26:29: warning: returning 'const char[7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case MARKUP    : return "markup";
                            ^~~~~~~~
dumptree.c:27:29: warning: returning 'const char[5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case HTML      : return "html";
                            ^~~~~~
dumptree.c:28:29: warning: returning 'const char[3]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case DL        : return "dl";
                            ^~~~
dumptree.c:29:29: warning: returning 'const char[3]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case UL        : return "ul";
                            ^~~~
dumptree.c:30:29: warning: returning 'const char[3]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case OL        : return "ol";
                            ^~~~
dumptree.c:31:29: warning: returning 'const char[5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case LISTITEM  : return "item";
                            ^~~~~~
dumptree.c:32:29: warning: returning 'const char[7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case HDR       : return "header";
                            ^~~~~~~~
dumptree.c:33:29: warning: returning 'const char[3]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case HR        : return "hr";
                            ^~~~
dumptree.c:34:29: warning: returning 'const char[6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case TABLE     : return "table";
                            ^~~~~~~
dumptree.c:35:29: warning: returning 'const char[7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case SOURCE    : return "source";
                            ^~~~~~~~
dumptree.c:36:29: warning: returning 'const char[6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case STYLE     : return "style";
                            ^~~~~~~
dumptree.c:37:29: warning: returning 'const char[14]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    default        : return "mystery node!";
                            ^~~~~~~~~~~~~~~
dumptree.c:104:33: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { 0, "P", "center" };
                                ^~~
dumptree.c:104:38: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { 0, "P", "center" };
                                     ^~~~~~~~
19 warnings generated.
compiling emmatch.c
In file included from emmatch.c:17:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
emmatch.c:113:20: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    case 2: if ( e = empair(f,first,last,match=2) )
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
emmatch.c:113:20: note: place parentheses around the assignment to silence this warning
    case 2: if ( e = empair(f,first,last,match=2) )
                   ^
                 (                               )
emmatch.c:113:20: note: use '==' to turn this assignment into an equality comparison
    case 2: if ( e = empair(f,first,last,match=2) )
                   ^
                   ==
3 warnings generated.
compiling flags.c
In file included from flags.c:2:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
flags.c:10:27: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOLINKS,        "!LINKS" },
                          ^~~~~~~~
flags.c:11:27: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOIMAGE,        "!IMAGE" },
                          ^~~~~~~~
flags.c:12:27: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOPANTS,        "!PANTS" },
                          ^~~~~~~~
flags.c:13:27: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOHTML,         "!HTML" },
                          ^~~~~~~
flags.c:14:27: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_STRICT,         "STRICT" },
                          ^~~~~~~~
flags.c:15:27: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_TAGTEXT,        "TAGTEXT" },
                          ^~~~~~~~~
flags.c:16:27: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NO_EXT,         "!EXT" },
                          ^~~~~~
flags.c:17:27: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_CDATA,          "CDATA" },
                          ^~~~~~~
flags.c:18:27: warning: initializing 'char *' with an expression of type 'const char[13]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOSUPERSCRIPT,  "!SUPERSCRIPT" },
                          ^~~~~~~~~~~~~~
flags.c:19:27: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NORELAXED,      "!RELAXED" },
                          ^~~~~~~~~~
flags.c:20:27: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOTABLES,       "!TABLES" },
                          ^~~~~~~~~
flags.c:21:27: warning: initializing 'char *' with an expression of type 'const char[15]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOSTRIKETHROUGH,"!STRIKETHROUGH" },
                          ^~~~~~~~~~~~~~~~
flags.c:22:27: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_TOC,            "TOC" },
                          ^~~~~
flags.c:23:27: warning: initializing 'char *' with an expression of type 'const char[13]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_1_COMPAT,       "MKD_1_COMPAT" },
                          ^~~~~~~~~~~~~~
flags.c:24:27: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_AUTOLINK,       "AUTOLINK" },
                          ^~~~~~~~~~
flags.c:25:27: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_SAFELINK,       "SAFELINK" },
                          ^~~~~~~~~~
flags.c:26:27: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOHEADER,       "!HEADER" },
                          ^~~~~~~~~
flags.c:27:27: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_TABSTOP,        "TABSTOP" },
                          ^~~~~~~~~
flags.c:28:27: warning: initializing 'char *' with an expression of type 'const char[10]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NODIVQUOTE,     "!DIVQUOTE" },
                          ^~~~~~~~~~~
flags.c:29:27: warning: initializing 'char *' with an expression of type 'const char[11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOALPHALIST,    "!ALPHALIST" },
                          ^~~~~~~~~~~~
flags.c:30:27: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NODLIST,        "!DLIST" },
                          ^~~~~~~~
flags.c:31:27: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_EXTRA_FOOTNOTE, "FOOTNOTE" },
                          ^~~~~~~~~~
flags.c:32:27: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOSTYLE,        "!STYLE" },
                          ^~~~~~~~
flags.c:33:27: warning: initializing 'char *' with an expression of type 'const char[12]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NODLDISCOUNT,   "!DLDISCOUNT" },
                          ^~~~~~~~~~~~~
flags.c:34:27: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_DLEXTRA,        "DLEXTRA" },
                          ^~~~~~~~~
flags.c:35:27: warning: initializing 'char *' with an expression of type 'const char[11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_FENCEDCODE,     "FENCEDCODE" },
                          ^~~~~~~~~~~~
flags.c:36:27: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_IDANCHOR,       "IDANCHOR" },
                          ^~~~~~~~~~
flags.c:37:27: warning: initializing 'char *' with an expression of type 'const char[11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_GITHUBTAGS,     "GITHUBTAGS" },
                          ^~~~~~~~~~~~
flags.c:38:29: warning: initializing 'char *' with an expression of type 'const char[17]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_URLENCODEDANCHOR, "URLENCODEDANCHOR" },
                            ^~~~~~~~~~~~~~~~~~
flags.c:39:27: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_LATEX,          "LATEX" },
                          ^~~~~~~
flags.c:40:27: warning: initializing 'char *' with an expression of type 'const char[13]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_EXPLICITLIST,   "EXPLICITLIST" },
                          ^~~~~~~~~~~~~~
flags.c:57:11: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( not = (*name == '!') ) {
             ~~~~^~~~~~~~~~~~~~~~
flags.c:57:11: note: place parentheses around the assignment to silence this warning
        if ( not = (*name == '!') ) {
                 ^
             (                   )
flags.c:57:11: note: use '==' to turn this assignment into an equality comparison
        if ( not = (*name == '!') ) {
                 ^
                 ==
flags.c:54:17: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for (i=0; i < NR(flagnames); i++) {
              ~ ^ ~~~~~~~~~~~~~
35 warnings generated.
compiling generate.c
In file included from generate.c:17:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
generate.c:285:14: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("&amp;", f);
                    ^~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:287:14: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("&lt;", f);
                    ^~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:289:14: warning: passing 'const char[4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("%22", f);
                    ^~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:293:14: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("  ", f);
                    ^~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:295:17: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, "%%%02X", c);
                       ^~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:368:28: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                S(ref->title) = (e-title)-2;
                              ~ ~~~~~~~~~^~
generate.c:515:17: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "https:" ), 
                ^~~~~~~~
generate.c:514:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:516:17: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "http:" ), 
                ^~~~~~~
generate.c:514:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:517:17: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "news:" ),
                ^~~~~~~
generate.c:514:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:518:17: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "ftp:" ), 
                ^~~~~~
generate.c:514:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:530:29: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for (i=0, p=protocol; i < NRPROTOCOLS; i++, p++)
                          ~ ^ ~~~~~~~~~~~
generate.c:554:35: warning: initializing 'char *' with an expression of type 'const char[11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype imaget = { 0, 0, "<img src=\"", "\"",
                                  ^~~~~~~~~~~~~
generate.c:554:50: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype imaget = { 0, 0, "<img src=\"", "\"",
                                                 ^~~~
generate.c:555:12: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             1, " alt=\"", "\" />", MKD_NOIMAGE|MKD_TAGTEXT, IS_URL };
                                ^~~~~~~~~
generate.c:555:23: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             1, " alt=\"", "\" />", MKD_NOIMAGE|MKD_TAGTEXT, IS_URL };
                                           ^~~~~~~
generate.c:556:35: warning: initializing 'char *' with an expression of type 'const char[10]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype linkt  = { 0, 0, "<a href=\"", "\"",
                                  ^~~~~~~~~~~~
generate.c:556:49: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype linkt  = { 0, 0, "<a href=\"", "\"",
                                                ^~~~
generate.c:557:33: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             0, ">", "</a>", MKD_NOLINKS, IS_URL };
                                ^~~
generate.c:557:38: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             0, ">", "</a>", MKD_NOLINKS, IS_URL };
                                     ^~~~~~
generate.c:567:7: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
      ^~~~~
generate.c:567:17: warning: initializing 'char *' with an expression of type 'const char[11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
                ^~~~~~~~~~~~~
generate.c:567:32: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
                               ^~~~
generate.c:567:41: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
                                        ^~~
generate.c:567:46: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
                                             ^~~~~~~~~
generate.c:568:7: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "raw:", 4, 0, 0, 0, 0, 0, MKD_NOHTML, 0 },
      ^~~~~~
generate.c:569:7: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
      ^~~~~~~
generate.c:569:19: warning: initializing 'char *' with an expression of type 'const char[13]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                  ^~~~~~~~~~~~~~~
generate.c:569:36: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                                   ^~~~
generate.c:569:45: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                                            ^~~
generate.c:569:50: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                                                 ^~~~~~~~~
generate.c:570:7: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
      ^~~~~~~
generate.c:570:19: warning: initializing 'char *' with an expression of type 'const char[14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                  ^~~~~~~~~~~~~~~~
generate.c:570:37: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                                    ^~~~
generate.c:570:46: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                                             ^~~
generate.c:570:51: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                                                  ^~~~~~~~~
generate.c:571:7: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
      ^~~~~~~~
generate.c:571:20: warning: initializing 'char *' with an expression of type 'const char[14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                   ^~~~~~~~~~~~~~~~
generate.c:571:38: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                                     ^~~~
generate.c:571:47: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                                              ^~~
generate.c:571:52: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                                                   ^~~~~~~~~
generate.c:584:30: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for ( i=0, r=specials; i < NR(specials); i++,r++ ) {
                           ~ ^ ~~~~~~~~~~~~
generate.c:606:19: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            puturl(edit, strlen(edit), f, 0);
            ~~~~~~       ^~~~~~~~~~~~
generate.c:632:12: warning: returning 'const char *' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    return p->ref_prefix ? p->ref_prefix : "fn";
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:629:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
p_or_nothing(p)
^
generate.c:649:13: warning: passing 'const char[64]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<sup id=\"%sref:%d\"><a href=\"#%s:%d\" rel=\"footnote\">%d</a></sup>",
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:693:19: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    else if ( tag = pseudo(ref->link) ) {
              ~~~~^~~~~~~~~~~~~~~~~~~
generate.c:693:19: note: place parentheses around the assignment to silence this warning
    else if ( tag = pseudo(ref->link) ) {
                  ^
              (                      )
generate.c:693:19: note: use '==' to turn this assignment into an equality comparison
    else if ( tag = pseudo(ref->link) ) {
                  ^
                  ==
generate.c:714:35: warning: passing 'const char[13]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            if ( ref->height ) Qprintf(f," height=\"%d\"", ref->height);
                                         ^~~~~~~~~~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:715:35: warning: passing 'const char[12]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            if ( ref->width ) Qprintf(f, " width=\"%d\"", ref->width);
                                         ^~~~~~~~~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:719:14: warning: passing 'const char[9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring(" title=\"", f);
                    ^~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:785:12: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
                if ( ref = bsearch(&key, T(f->footnotes->note),
                     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:785:12: note: place parentheses around the assignment to silence this warning
                if ( ref = bsearch(&key, T(f->footnotes->note),
                         ^
                     (
generate.c:785:12: note: use '==' to turn this assignment into an equality comparison
                if ( ref = bsearch(&key, T(f->footnotes->note),
                         ^
                         ==
generate.c:814:25: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '&':   Qstring("&amp;", f); break;
                        ^~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:815:25: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '>':   Qstring("&gt;", f); break;
                        ^~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:816:25: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '<':   Qstring("&lt;", f); break;
                        ^~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:829:5: warning: 'DEBIAN_GLITCH' is not defined, evaluates to 0 [-Wundef]
#if DEBIAN_GLITCH
    ^
generate.c:832:10: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("&#", f);
                ^~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:833:13: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, COINTOSS() ? "x%02x;" : "%02d;", *((unsigned char*)(s++)) );
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./config.h:14:20: note: expanded from macro 'COINTOSS'
#define COINTOSS() (random()&1)
                   ^
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:897:14: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("  ", f);
                    ^~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:909:13: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<del>", f);
            ^~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:911:13: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</del>", f);
            ^~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:961:13: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<code>", f);
            ^~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:963:13: warning: passing 'const char[8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</code>", f);
            ^~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1040:10: warning: passing 'const char[10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<a href=\"", f);
                ^~~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1043:13: warning: passing 'const char[8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            mangle("mailto:", 7, f);
                   ^~~~~~~~~
generate.c:826:14: note: passing argument to parameter 's' here
mangle(char *s, int len, MMIOT *f)
             ^
generate.c:1046:10: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("\">", f);
                ^~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1048:10: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("</a>", f);
                ^~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1055:10: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("</a>", f);
                ^~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1122:15: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    Qstring("&amp;", f);
                            ^~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1176:17: warning: passing 'const char[9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, "&r%cquo;", typeofquote);
                       ^~~~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1182:13: warning: passing 'const char[9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "&l%cquo;", typeofquote);
                   ^~~~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1202:18: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    if ( !(len = strlen(s)) )
               ~ ^~~~~~~~~
generate.c:1224:13: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'s|",      "rsquo",  0 },
            ^~~~~
generate.c:1224:25: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'s|",      "rsquo",  0 },
                        ^~~~~~~
generate.c:1225:13: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'t|",      "rsquo",  0 },
            ^~~~~
generate.c:1225:25: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'t|",      "rsquo",  0 },
                        ^~~~~~~
generate.c:1226:13: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'re|",     "rsquo",  0 },
            ^~~~~~
generate.c:1226:25: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'re|",     "rsquo",  0 },
                        ^~~~~~~
generate.c:1227:13: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ll|",     "rsquo",  0 },
            ^~~~~~
generate.c:1227:25: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ll|",     "rsquo",  0 },
                        ^~~~~~~
generate.c:1228:13: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ve|",     "rsquo",  0 },
            ^~~~~~
generate.c:1228:25: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ve|",     "rsquo",  0 },
                        ^~~~~~~
generate.c:1229:13: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'m|",      "rsquo",  0 },
            ^~~~~
generate.c:1229:25: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'m|",      "rsquo",  0 },
                        ^~~~~~~
generate.c:1230:13: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'d|",      "rsquo",  0 },
            ^~~~~
generate.c:1230:25: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'d|",      "rsquo",  0 },
                        ^~~~~~~
generate.c:1231:13: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "---",      "mdash",  2 },
            ^~~~~
generate.c:1231:25: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "---",      "mdash",  2 },
                        ^~~~~~~
generate.c:1232:13: warning: initializing 'char *' with an expression of type 'const char[3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "--",       "ndash",  1 },
            ^~~~
generate.c:1232:25: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "--",       "ndash",  1 },
                        ^~~~~~~
generate.c:1233:13: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  "...",      "hellip", 2 },
            ^~~~~
generate.c:1233:25: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  "...",      "hellip", 2 },
                        ^~~~~~~~
generate.c:1234:13: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  ". . .",    "hellip", 4 },
            ^~~~~~~
generate.c:1234:25: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  ". . .",    "hellip", 4 },
                        ^~~~~~~~
generate.c:1235:13: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(c)",      "copy",   2 },
            ^~~~~
generate.c:1235:25: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(c)",      "copy",   2 },
                        ^~~~~~
generate.c:1236:13: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(r)",      "reg",    2 },
            ^~~~~
generate.c:1236:25: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(r)",      "reg",    2 },
                        ^~~~~
generate.c:1237:13: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(tm)",     "trade",  3 },
            ^~~~~~
generate.c:1237:25: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(tm)",     "trade",  3 },
                        ^~~~~~~
generate.c:1238:13: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "|3/4|",    "frac34", 2 },
            ^~~~~~~
generate.c:1238:25: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "|3/4|",    "frac34", 2 },
                        ^~~~~~~~
generate.c:1239:13: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "|3/4ths|", "frac34", 2 },
            ^~~~~~~~~~
generate.c:1239:25: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "|3/4ths|", "frac34", 2 },
                        ^~~~~~~~
generate.c:1240:13: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "|1/2|",    "frac12", 2 },
            ^~~~~~~
generate.c:1240:25: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "|1/2|",    "frac12", 2 },
                        ^~~~~~~~
generate.c:1241:13: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "|1/4|",    "frac14", 2 },
            ^~~~~~~
generate.c:1241:25: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "|1/4|",    "frac14", 2 },
                        ^~~~~~~~
generate.c:1242:13: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "|1/4th|",  "frac14", 2 },
            ^~~~~~~~~
generate.c:1242:25: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "|1/4th|",  "frac14", 2 },
                        ^~~~~~~~
generate.c:1243:13: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '&',  "&#0;",      0,       3 },
            ^~~~~~
generate.c:1263:14: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Qprintf(f, "&%s;", smarties[i].entity);
                           ^~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1285:16: warning: passing 'const char[8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("&ldquo;", f);
                                    ^~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1287:16: warning: passing 'const char[8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("&rdquo;", f);
                                    ^~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1260:18: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for ( i=0; i < NRSMART; i++)
               ~ ^ ~~~~~~~
generate.c:1374:15: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    Qstring(tag_text(f) ? "  " : "<br/>", f);
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1349:21: note: expanded from macro 'tag_text'
#define tag_text(f)     is_flag_set(f->flags, MKD_TAGTEXT)
                        ^
./markdown.h:17:34: note: expanded from macro 'is_flag_set'
#define is_flag_set(flags, item)        ((flags) & (item))
                                        ^
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1378:12: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&gt;", f);
                                ^~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1384:12: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&quot;", f);
                                ^~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1392:16: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("![", f);
                                    ^~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1451:12: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("<sup>",f);
                                ^~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1452:35: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        ___mkd_reparse(sup, len, 0, f, "()");
                                                       ^~~~
generate.c:212:71: note: passing argument to parameter 'esc' here
___mkd_reparse(char *bfr, int size, mkd_flag_t flags, MMIOT *f, char *esc)
                                                                      ^
generate.c:1453:12: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("</sup>", f);
                                ^~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1499:27: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    case '&':   Qstring("&amp;", f);
                                        ^~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1503:17: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                    Qstring("&lt;", f);
                                            ^~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1554:16: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("&lt;", f);
                                    ^~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1563:12: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&amp;", f);
                                ^~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1592:13: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<h%d", pp->hnumber);
                   ^~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1594:14: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring(" id=\"", f);
                    ^~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1601:14: warning: passing 'const char[10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("<a name=\"", f);
                    ^~~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1603:14: warning: passing 'const char[8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("\"></a>\n", f);
                    ^~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1605:13: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<h%d>", pp->hnumber);
                   ^~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1609:16: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qprintf(f, "</h%d>", pp->hnumber);
               ^~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1615:31: warning: initializing 'char *' with an expression of type 'const char[1]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static char* alignments[] = { "", " style=\"text-align:center;\"",
                              ^~
generate.c:1615:35: warning: initializing 'char *' with an expression of type 'const char[28]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static char* alignments[] = { "", " style=\"text-align:center;\"",
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1616:7: warning: initializing 'char *' with an expression of type 'const char[26]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                  " style=\"text-align:left;\"",
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1617:7: warning: initializing 'char *' with an expression of type 'const char[27]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                  " style=\"text-align:right;\"" };
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1633:13: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<tr>\n", f);
            ^~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1645:13: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<%s%s>",
                   ^~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1648:52: warning: passing 'const char[2]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        ___mkd_reparse(T(p->text)+first, idx-first, 0, f, "|");
                                                          ^~~
generate.c:212:71: note: passing argument to parameter 'esc' here
___mkd_reparse(char *bfr, int size, mkd_flag_t flags, MMIOT *f, char *esc)
                                                                      ^
generate.c:1649:13: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "</%s>\n", block);
                   ^~~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1655:17: warning: passing 'const char[11]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, "<%s></%s>\n", block, block);
                       ^~~~~~~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1658:13: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</tr>\n", f);
            ^~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1710:13: warning: passing 'const char[9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<table>\n", f);
            ^~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1711:13: warning: passing 'const char[9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<thead>\n", f);
            ^~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1712:24: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    hcols = splat(hdr, "th", align, 0, f);
                       ^~~~
generate.c:1622:22: note: passing argument to parameter 'block' here
splat(Line *p, char *block, Istring align, int force, MMIOT *f)
                     ^
generate.c:1713:13: warning: passing 'const char[10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</thead>\n", f);
            ^~~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1721:13: warning: passing 'const char[9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<tbody>\n", f);
            ^~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1723:14: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        splat(body, "td", align, 1, f);
                    ^~~~
generate.c:1622:22: note: passing argument to parameter 'block' here
splat(Line *p, char *block, Istring align, int force, MMIOT *f)
                     ^
generate.c:1724:13: warning: passing 'const char[10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</tbody>\n", f);
            ^~~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1725:13: warning: passing 'const char[10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</table>\n", f);
            ^~~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1735:30: warning: initializing 'char *' with an expression of type 'const char[1]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { "", "<p>", "<p style=\"text-align:center;\">"  };
                             ^~
generate.c:1735:34: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { "", "<p>", "<p style=\"text-align:center;\">"  };
                                 ^~~~~
generate.c:1735:41: warning: initializing 'char *' with an expression of type 'const char[31]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { "", "<p>", "<p style=\"text-align:center;\">"  };
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1736:30: warning: initializing 'char *' with an expression of type 'const char[1]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *End[]   = { "", "</p>","</p>" };
                             ^~
generate.c:1736:34: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *End[]   = { "", "</p>","</p>" };
                                 ^~~~~~
generate.c:1736:41: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *End[]   = { "", "</p>","</p>" };
                                        ^~~~~~
generate.c:1806:13: warning: passing 'const char[11]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<pre><code", f);
            ^~~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1808:15: warning: passing 'const char[9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
      Qstring(" class=\"", f);
              ^~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1810:15: warning: passing 'const char[2]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
      Qstring("\"", f);
              ^~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1812:13: warning: passing 'const char[2]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring(">", f);
            ^~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1824:13: warning: passing 'const char[14]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</code></pre>", f);
            ^~~~~~~~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1796:18: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            Qwrite(fmt, strlen(fmt), f);
            ~~~~~~      ^~~~~~~~~~~
generate.c:1853:10: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("\n\n", f);
                ^~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1895:13: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, arguments ? "<%s %s>" : "<%s>", block, arguments);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1900:14: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
         Qprintf(f, "</%s>", block);
                    ^~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1911:10: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<dl>\n", f);
                ^~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1915:11: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Qstring("<dt>", f);
                        ^~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1917:11: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Qstring("</dt>\n", f);
                        ^~~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1920:23: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            htmlify(p->down, "dd", p->ident, f);
                             ^~~~
generate.c:1891:29: note: passing argument to parameter 'block' here
htmlify(Paragraph *p, char *block, char *arguments, MMIOT *f)
                            ^
generate.c:1924:10: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("</dl>", f);
                ^~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1933:13: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<%cl", (typ==UL)?'u':'o');
                   ^~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1935:17: warning: passing 'const char[10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, " type=\"a\"");
                       ^~~~~~~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1936:13: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, ">\n");
                   ^~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1942:23: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            htmlify(p->down, "li", p->ident, f);
                             ^~~~
generate.c:1891:29: note: passing argument to parameter 'block' here
htmlify(Paragraph *p, char *block, char *arguments, MMIOT *f)
                            ^
generate.c:1947:13: warning: passing 'const char[8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "</%cl>\n", (typ==UL)?'u':'o');
                   ^~~~~~~~~~
generate.c:171:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1973:19: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        htmlify(p->down, p->ident ? "div" : "blockquote", p->ident, f);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1891:29: note: passing argument to parameter 'block' here
htmlify(Paragraph *p, char *block, char *arguments, MMIOT *f)
                            ^
generate.c:1987:10: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<hr />", f);
                ^~~~~~~~
generate.c:151:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:2021:23: warning: passing 'const char[37]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Csprintf(&m->out, "\n<div class=\"footnotes\">\n<hr/>\n<ol>\n");
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
generate.c:2027:21: warning: passing 'const char[17]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Csprintf(&m->out, "<li id=\"%s:%d\">\n",
                                  ^~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
generate.c:2030:21: warning: passing 'const char[47]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Csprintf(&m->out, "<a href=\"#%sref:%d\" rev=\"footnote\">&#8617;</a>",
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
generate.c:2032:21: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Csprintf(&m->out, "</li>\n");
                                  ^~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
generate.c:2036:23: warning: passing 'const char[14]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Csprintf(&m->out, "</ol>\n</div>\n");
                      ^~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
182 warnings generated.
compiling gethopt.c
gethopt.c:13:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
hoptset(ctx, argc, argv)
^
gethopt.c:26:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
hoptarg(ctx)
^
gethopt.c:33:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
hoptind(ctx)
^
gethopt.c:40:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
hoptopt(ctx)
^
gethopt.c:48:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
hopterr(ctx,val)
^
gethopt.c:59:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
gethopt(ctx, opts, nropts)
^
gethopt.c:236:5: warning: 'DEBUG' is not defined, evaluates to 0 [-Wundef]
#if DEBUG
    ^
7 warnings generated.
compiling github_flavoured.c
In file included from github_flavoured.c:16:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
2 warnings generated.
compiling h1title.c
In file included from h1title.c:2:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
2 warnings generated.
compiling html5.c
html5.c:13:20: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("ASIDE", 0);
                   ^~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:14:20: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("FOOTER", 0);
                   ^~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:15:20: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("HEADER", 0);
                   ^~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:16:20: warning: passing 'const char[4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("NAV", 0);
                   ^~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:17:20: warning: passing 'const char[8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("SECTION", 0);
                   ^~~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:18:20: warning: passing 'const char[8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("ARTICLE", 0);
                   ^~~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
6 warnings generated.
compiling markdown.c
In file included from markdown.c:17:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
markdown.c:107:30: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static struct kw comment = { "!--", 3, 0 };
                             ^~~~~
markdown.c:266:14: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
           if ( end = strstr(T(t->text), "-->") ) {
                ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
markdown.c:266:14: note: place parentheses around the assignment to silence this warning
           if ( end = strstr(T(t->text), "-->") ) {
                    ^
                (                              )
markdown.c:266:14: note: use '==' to turn this assignment into an equality comparison
           if ( end = strstr(T(t->text), "-->") ) {
                    ^
                    ==
markdown.c:267:32: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
               if ( nextnonblank(t, 3 + (end - T(t->text))) < S(t->text) )
                    ~~~~~~~~~~~~    ~~^~~~~~~~~~~~~~~~~~~~
markdown.c:317:16: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
                if ( closing = (c == '/') ) c = flogetc(&f);
                     ~~~~~~~~^~~~~~~~~~~~
markdown.c:317:16: note: place parentheses around the assignment to silence this warning
                if ( closing = (c == '/') ) c = flogetc(&f);
                             ^
                     (                   )
markdown.c:317:16: note: use '==' to turn this assignment into an equality comparison
                if ( closing = (c == '/') ) c = flogetc(&f);
                             ^
                             ==
markdown.c:491:8: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( x=is_extra_dt(t->next, clip, flags) )
             ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
markdown.c:491:8: note: place parentheses around the assignment to silence this warning
        if ( x=is_extra_dt(t->next, clip, flags) )
              ^
             (                                  )
markdown.c:491:8: note: use '==' to turn this assignment into an equality comparison
        if ( x=is_extra_dt(t->next, clip, flags) )
              ^
              ==
markdown.c:504:14: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    if ( ret = is_discount_dt(t,clip,flags) )
         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
markdown.c:504:14: note: place parentheses around the assignment to silence this warning
    if ( ret = is_discount_dt(t,clip,flags) )
             ^
         (                                 )
markdown.c:504:14: note: use '==' to turn this assignment into an equality comparison
    if ( ret = is_discount_dt(t,clip,flags) )
             ^
             ==
markdown.c:822:8: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        char *prefix = "class";
              ^        ~~~~~~~
markdown.c:830:12: warning: assigning to 'char *' from 'const char[3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            prefix="id";
                  ^~~~~
markdown.c:832:16: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( p->ident = malloc(4+strlen(prefix)+S(q->text)) )
             ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
markdown.c:832:16: note: place parentheses around the assignment to silence this warning
        if ( p->ident = malloc(4+strlen(prefix)+S(q->text)) )
                      ^
             (                                             )
markdown.c:832:16: note: use '==' to turn this assignment into an equality comparison
        if ( p->ident = malloc(4+strlen(prefix)+S(q->text)) )
                      ^
                      ==
markdown.c:944:12: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( para = (text != q->next) )
             ~~~~~^~~~~~~~~~~~~~~~~~~
markdown.c:944:12: note: place parentheses around the assignment to silence this warning
        if ( para = (text != q->next) )
                  ^
             (                       )
markdown.c:944:12: note: use '==' to turn this assignment into an equality comparison
        if ( para = (text != q->next) )
                  ^
                  ==
markdown.c:967:12: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( para = (q != text) ) {
             ~~~~~^~~~~~~~~~~~~
markdown.c:967:12: note: place parentheses around the assignment to silence this warning
        if ( para = (q != text) ) {
                  ^
             (                 )
markdown.c:967:12: note: use '==' to turn this assignment into an equality comparison
        if ( para = (q != text) ) {
                  ^
                  ==
markdown.c:1007:12: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( para = (q != text) ) {
             ~~~~~^~~~~~~~~~~~~
markdown.c:1007:12: note: place parentheses around the assignment to silence this warning
        if ( para = (q != text) ) {
                  ^
             (                 )
markdown.c:1007:12: note: use '==' to turn this assignment into an equality comparison
        if ( para = (q != text) ) {
                  ^
                  ==
markdown.c:1347:23: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        else if ( list_class = islist(ptr, &indent, f->flags, &list_type) ) {
                  ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
markdown.c:1347:23: note: place parentheses around the assignment to silence this warning
        else if ( list_class = islist(ptr, &indent, f->flags, &list_type) ) {
                             ^
                  (                                                      )
markdown.c:1347:23: note: use '==' to turn this assignment into an equality comparison
        else if ( list_class = islist(ptr, &indent, f->flags, &list_type) ) {
                             ^
                             ==
15 warnings generated.
compiling mkdio.c
In file included from mkdio.c:14:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
mkdio.c:28:16: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( ret->ctx = calloc(sizeof(MMIOT), 1) ) {
             ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
mkdio.c:28:16: note: place parentheses around the assignment to silence this warning
        if ( ret->ctx = calloc(sizeof(MMIOT), 1) ) {
                      ^
             (                                  )
mkdio.c:28:16: note: use '==' to turn this assignment into an equality comparison
        if ( ret->ctx = calloc(sizeof(MMIOT), 1) ) {
                      ^
                      ==
mkdio.c:332:14: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    if ( len = S(f.out) ) {
         ~~~~^~~~~~~~~~
mkdio.c:332:14: note: place parentheses around the assignment to silence this warning
    if ( len = S(f.out) ) {
             ^
         (             )
mkdio.c:332:14: note: use '==' to turn this assignment into an equality comparison
    if ( len = S(f.out) ) {
             ^
             ==
mkdio.c:363:49: warning: comparison of integers of different signs: 'unsigned long' and 'int' [-Wsign-compare]
        status = fwrite(T(f.out), S(f.out), 1, output) == S(f.out);
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~
5 warnings generated.
compiling mktags.c
mktags.c:21:15: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    p->size = strlen(id);
            ~ ^~~~~~~~~~
mktags.c:53:8: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("STYLE");
       ^~~~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:54:8: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("SCRIPT");
       ^~~~~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:55:8: warning: passing 'const char[8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("ADDRESS");
       ^~~~~~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:56:8: warning: passing 'const char[4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("BDO");
       ^~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:57:8: warning: passing 'const char[11]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("BLOCKQUOTE");
       ^~~~~~~~~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:58:8: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("CENTER");
       ^~~~~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:59:8: warning: passing 'const char[4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("DFN");
       ^~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:60:8: warning: passing 'const char[4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("DIV");
       ^~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:61:8: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("OBJECT");
       ^~~~~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:62:8: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H1");
       ^~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:63:8: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H2");
       ^~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:64:8: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H3");
       ^~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:65:8: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H4");
       ^~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:66:8: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H5");
       ^~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:67:8: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H6");
       ^~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:68:8: warning: passing 'const char[8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("LISTING");
       ^~~~~~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:69:8: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("NOBR");
       ^~~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:70:8: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("FORM");
       ^~~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:71:8: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("UL");
       ^~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:72:8: warning: passing 'const char[2]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("P");
       ^~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:73:8: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("OL");
       ^~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:74:8: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("DL");
       ^~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:75:8: warning: passing 'const char[10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("PLAINTEXT");
       ^~~~~~~~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:76:8: warning: passing 'const char[4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("PRE");
       ^~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:77:8: warning: passing 'const char[6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("TABLE");
       ^~~~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:78:8: warning: passing 'const char[4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("WBR");
       ^~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:79:8: warning: passing 'const char[4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("XMP");
       ^~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:80:8: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    SC("HR");
       ^~~~
mktags.c:51:30: note: expanded from macro 'SC'
#define SC(x)   define_one_tag(x, 1)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:81:8: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("IFRAME");
       ^~~~~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
mktags.c:82:8: warning: passing 'const char[4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("MAP");
       ^~~~~
mktags.c:50:30: note: expanded from macro 'KW'
#define KW(x)   define_one_tag(x, 0)
                               ^
mktags.c:16:22: note: passing argument to parameter 'id' here
define_one_tag(char *id, int selfclose)
                     ^
31 warnings generated.
compiling notspecial.c
notspecial.c:9:5: warning: 'HAVE_STAT' is not defined, evaluates to 0 [-Wundef]
#if HAVE_STAT && HAS_ISCHR && HAS_ISFIFO && HAS_ISSOCK
    ^
notspecial.c:31:5: warning: 'DEBUG' is not defined, evaluates to 0 [-Wundef]
#if DEBUG
    ^
2 warnings generated.
compiling pgm_options.c
pgm_options.c:19:5: warning: 'HAVE_LIBGEN_H' is not defined, evaluates to 0 [-Wundef]
#if HAVE_LIBGEN_H
    ^
pgm_options.c:31:7: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "tabstop",       "default (4-space) tabstops", 0, 0, 1, MKD_TABSTOP  },
      ^~~~~~~~~
pgm_options.c:31:24: warning: initializing 'char *' with an expression of type 'const char[27]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "tabstop",       "default (4-space) tabstops", 0, 0, 1, MKD_TABSTOP  },
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:32:7: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "image",         "images",                     1, 0, 1, MKD_NOIMAGE  },
      ^~~~~~~
pgm_options.c:32:24: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "image",         "images",                     1, 0, 1, MKD_NOIMAGE  },
                       ^~~~~~~~
pgm_options.c:33:7: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "links",         "links",                      1, 0, 1, MKD_NOLINKS  },
      ^~~~~~~
pgm_options.c:33:24: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "links",         "links",                      1, 0, 1, MKD_NOLINKS  },
                       ^~~~~~~
pgm_options.c:34:7: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "relax",         "Markdown.pl compatibility",  1, 1, 1, MKD_STRICT   },
      ^~~~~~~
pgm_options.c:34:24: warning: initializing 'char *' with an expression of type 'const char[26]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "relax",         "Markdown.pl compatibility",  1, 1, 1, MKD_STRICT   },
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:35:7: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "strict",        "Markdown.pl compatibility",  0, 0, 1, MKD_STRICT   },
      ^~~~~~~~
pgm_options.c:35:24: warning: initializing 'char *' with an expression of type 'const char[26]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "strict",        "Markdown.pl compatibility",  0, 0, 1, MKD_STRICT   },
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:36:7: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "tables",        "tables",                     1, 0, 1, MKD_NOTABLES },
      ^~~~~~~~
pgm_options.c:36:24: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "tables",        "tables",                     1, 0, 1, MKD_NOTABLES },
                       ^~~~~~~~
pgm_options.c:37:7: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "header",        "pandoc-style headers",       1, 0, 1, MKD_NOHEADER },
      ^~~~~~~~
pgm_options.c:37:24: warning: initializing 'char *' with an expression of type 'const char[21]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "header",        "pandoc-style headers",       1, 0, 1, MKD_NOHEADER },
                       ^~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:38:7: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "html",          "raw html",                   1, 0, 1, MKD_NOHTML   },
      ^~~~~~
pgm_options.c:38:24: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "html",          "raw html",                   1, 0, 1, MKD_NOHTML   },
                       ^~~~~~~~~~
pgm_options.c:39:7: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "ext",           "extended protocols",         1, 0, 1, MKD_NO_EXT   },
      ^~~~~
pgm_options.c:39:24: warning: initializing 'char *' with an expression of type 'const char[19]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "ext",           "extended protocols",         1, 0, 1, MKD_NO_EXT   },
                       ^~~~~~~~~~~~~~~~~~~~
pgm_options.c:40:7: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "cdata",         "generate cdata",             0, 0, 0, MKD_CDATA    },
      ^~~~~~~
pgm_options.c:40:24: warning: initializing 'char *' with an expression of type 'const char[15]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "cdata",         "generate cdata",             0, 0, 0, MKD_CDATA    },
                       ^~~~~~~~~~~~~~~~
pgm_options.c:41:7: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "smarty",        "smartypants",                1, 0, 1, MKD_NOPANTS  },
      ^~~~~~~~
pgm_options.c:41:24: warning: initializing 'char *' with an expression of type 'const char[12]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "smarty",        "smartypants",                1, 0, 1, MKD_NOPANTS  },
                       ^~~~~~~~~~~~~
pgm_options.c:42:7: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "pants",         "smartypants",                1, 1, 1, MKD_NOPANTS  },
      ^~~~~~~
pgm_options.c:42:24: warning: initializing 'char *' with an expression of type 'const char[12]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "pants",         "smartypants",                1, 1, 1, MKD_NOPANTS  },
                       ^~~~~~~~~~~~~
pgm_options.c:43:7: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "toc",           "tables of contents",         0, 0, 1, MKD_TOC      },
      ^~~~~
pgm_options.c:43:24: warning: initializing 'char *' with an expression of type 'const char[19]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "toc",           "tables of contents",         0, 0, 1, MKD_TOC      },
                       ^~~~~~~~~~~~~~~~~~~~
pgm_options.c:44:7: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "autolink",      "autolinking",                0, 0, 1, MKD_AUTOLINK },
      ^~~~~~~~~~
pgm_options.c:44:24: warning: initializing 'char *' with an expression of type 'const char[12]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "autolink",      "autolinking",                0, 0, 1, MKD_AUTOLINK },
                       ^~~~~~~~~~~~~
pgm_options.c:45:7: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "safelink",      "safe links",                 0, 0, 1, MKD_SAFELINK },
      ^~~~~~~~~~
pgm_options.c:45:24: warning: initializing 'char *' with an expression of type 'const char[11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "safelink",      "safe links",                 0, 0, 1, MKD_SAFELINK },
                       ^~~~~~~~~~~~
pgm_options.c:46:7: warning: initializing 'char *' with an expression of type 'const char[14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "strikethrough", "strikethrough",              1, 0, 1, MKD_NOSTRIKETHROUGH },
      ^~~~~~~~~~~~~~~
pgm_options.c:46:24: warning: initializing 'char *' with an expression of type 'const char[14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "strikethrough", "strikethrough",              1, 0, 1, MKD_NOSTRIKETHROUGH },
                       ^~~~~~~~~~~~~~~
pgm_options.c:47:7: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "del",           "strikethrough",              1, 1, 1, MKD_NOSTRIKETHROUGH },
      ^~~~~
pgm_options.c:47:24: warning: initializing 'char *' with an expression of type 'const char[14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "del",           "strikethrough",              1, 1, 1, MKD_NOSTRIKETHROUGH },
                       ^~~~~~~~~~~~~~~
pgm_options.c:48:7: warning: initializing 'char *' with an expression of type 'const char[12]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "superscript",   "superscript",                1, 0, 1, MKD_NOSUPERSCRIPT },
      ^~~~~~~~~~~~~
pgm_options.c:48:24: warning: initializing 'char *' with an expression of type 'const char[12]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "superscript",   "superscript",                1, 0, 1, MKD_NOSUPERSCRIPT },
                       ^~~~~~~~~~~~~
pgm_options.c:49:7: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "emphasis",      "emphasis inside words",      0, 0, 1, MKD_NORELAXED },
      ^~~~~~~~~~
pgm_options.c:49:24: warning: initializing 'char *' with an expression of type 'const char[22]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "emphasis",      "emphasis inside words",      0, 0, 1, MKD_NORELAXED },
                       ^~~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:50:7: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "divquote",      ">%class% blockquotes",       1, 0, 1, MKD_NODIVQUOTE },
      ^~~~~~~~~~
pgm_options.c:50:24: warning: initializing 'char *' with an expression of type 'const char[21]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "divquote",      ">%class% blockquotes",       1, 0, 1, MKD_NODIVQUOTE },
                       ^~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:51:7: warning: initializing 'char *' with an expression of type 'const char[10]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "alphalist",     "alpha lists",                1, 0, 1, MKD_NOALPHALIST },
      ^~~~~~~~~~~
pgm_options.c:51:24: warning: initializing 'char *' with an expression of type 'const char[12]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "alphalist",     "alpha lists",                1, 0, 1, MKD_NOALPHALIST },
                       ^~~~~~~~~~~~~
pgm_options.c:52:7: warning: initializing 'char *' with an expression of type 'const char[15]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "definitionlist","definition lists",           1, 0, 1, MKD_NODLIST },
      ^~~~~~~~~~~~~~~~
pgm_options.c:52:24: warning: initializing 'char *' with an expression of type 'const char[17]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "definitionlist","definition lists",           1, 0, 1, MKD_NODLIST },
                       ^~~~~~~~~~~~~~~~~~
pgm_options.c:53:7: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "1.0",           "markdown 1.0 compatibility", 0, 0, 1, MKD_1_COMPAT },
      ^~~~~
pgm_options.c:53:24: warning: initializing 'char *' with an expression of type 'const char[27]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "1.0",           "markdown 1.0 compatibility", 0, 0, 1, MKD_1_COMPAT },
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:54:7: warning: initializing 'char *' with an expression of type 'const char[10]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "footnotes",     "markdown extra footnotes",   0, 0, 1, MKD_EXTRA_FOOTNOTE },
      ^~~~~~~~~~~
pgm_options.c:54:24: warning: initializing 'char *' with an expression of type 'const char[25]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "footnotes",     "markdown extra footnotes",   0, 0, 1, MKD_EXTRA_FOOTNOTE },
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:55:7: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "footnote",      "markdown extra footnotes",   0, 1, 1, MKD_EXTRA_FOOTNOTE },
      ^~~~~~~~~~
pgm_options.c:55:24: warning: initializing 'char *' with an expression of type 'const char[25]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "footnote",      "markdown extra footnotes",   0, 1, 1, MKD_EXTRA_FOOTNOTE },
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:56:7: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "style",         "extract style blocks",       1, 0, 1, MKD_NOSTYLE },
      ^~~~~~~
pgm_options.c:56:24: warning: initializing 'char *' with an expression of type 'const char[21]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "style",         "extract style blocks",       1, 0, 1, MKD_NOSTYLE },
                       ^~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:57:7: warning: initializing 'char *' with an expression of type 'const char[11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "dldiscount",    "discount-style definition lists", 1, 0, 1, MKD_NODLDISCOUNT },
      ^~~~~~~~~~~~
pgm_options.c:57:24: warning: initializing 'char *' with an expression of type 'const char[32]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "dldiscount",    "discount-style definition lists", 1, 0, 1, MKD_NODLDISCOUNT },
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:58:7: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "dlextra",       "extra-style definition lists", 0, 0, 1, MKD_DLEXTRA },
      ^~~~~~~~~
pgm_options.c:58:24: warning: initializing 'char *' with an expression of type 'const char[29]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "dlextra",       "extra-style definition lists", 0, 0, 1, MKD_DLEXTRA },
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:59:7: warning: initializing 'char *' with an expression of type 'const char[11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "fencedcode",    "fenced code blocks",         0, 0, 1, MKD_FENCEDCODE },
      ^~~~~~~~~~~~
pgm_options.c:59:24: warning: initializing 'char *' with an expression of type 'const char[19]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "fencedcode",    "fenced code blocks",         0, 0, 1, MKD_FENCEDCODE },
                       ^~~~~~~~~~~~~~~~~~~~
pgm_options.c:60:7: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "idanchor",      "id= anchors in TOC",         0, 0, 1, MKD_IDANCHOR },
      ^~~~~~~~~~
pgm_options.c:60:24: warning: initializing 'char *' with an expression of type 'const char[19]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "idanchor",      "id= anchors in TOC",         0, 0, 1, MKD_IDANCHOR },
                       ^~~~~~~~~~~~~~~~~~~~
pgm_options.c:61:7: warning: initializing 'char *' with an expression of type 'const char[11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "githubtags",    "permit - and _ in element names", 0, 0, 0, MKD_GITHUBTAGS },
      ^~~~~~~~~~~~
pgm_options.c:61:24: warning: initializing 'char *' with an expression of type 'const char[32]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "githubtags",    "permit - and _ in element names", 0, 0, 0, MKD_GITHUBTAGS },
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:62:7: warning: initializing 'char *' with an expression of type 'const char[17]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "urlencodedanchor", "html5-style anchors", 0, 0, 0, MKD_URLENCODEDANCHOR },
      ^~~~~~~~~~~~~~~~~~
pgm_options.c:62:27: warning: initializing 'char *' with an expression of type 'const char[20]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "urlencodedanchor", "html5-style anchors", 0, 0, 0, MKD_URLENCODEDANCHOR },
                          ^~~~~~~~~~~~~~~~~~~~~
pgm_options.c:63:7: warning: initializing 'char *' with an expression of type 'const char[12]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "html5anchor",   "html5-style anchors", 0, 1, 0, MKD_URLENCODEDANCHOR },
      ^~~~~~~~~~~~~
pgm_options.c:63:24: warning: initializing 'char *' with an expression of type 'const char[20]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "html5anchor",   "html5-style anchors", 0, 1, 0, MKD_URLENCODEDANCHOR },
                       ^~~~~~~~~~~~~~~~~~~~~
pgm_options.c:64:7: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "latex",         "handle LaTeX escapes",         0, 0, 1, MKD_LATEX },
      ^~~~~~~
pgm_options.c:64:24: warning: initializing 'char *' with an expression of type 'const char[21]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "latex",         "handle LaTeX escapes",         0, 0, 1, MKD_LATEX },
                       ^~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:65:7: warning: initializing 'char *' with an expression of type 'const char[13]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "explicitlist",  "do not merge adjacent numeric/bullet lists", 0, 0, 1, MKD_EXPLICITLIST },
      ^~~~~~~~~~~~~~
pgm_options.c:65:24: warning: initializing 'char *' with an expression of type 'const char[43]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "explicitlist",  "do not merge adjacent numeric/bullet lists", 0, 0, 1, MKD_EXPLICITLIST },
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
pgm_options.c:94:14: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
        for (i=0; i < NR(opts); i++)
                  ~ ^ ~~~~~~~~
pgm_options.c:101:14: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
        for (i=0; i < NR(opts); i++)
                  ~ ^ ~~~~~~~~
pgm_options.c:129:15: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
        for ( i=0; i < NR(opts); i++ )
                   ~ ^ ~~~~~~~~
pgm_options.c:133:9: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
        if ( i < NR(opts) ) {
             ~ ^ ~~~~~~~~
75 warnings generated.
compiling rdiscount.c
rdiscount.c:25:7: warning: initializing 'char *' with an expression of type 'const char[12]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "filter_html", MKD_NOHTML },
      ^~~~~~~~~~~~~
rdiscount.c:26:7: warning: initializing 'char *' with an expression of type 'const char[10]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "footnotes", MKD_EXTRA_FOOTNOTE },
      ^~~~~~~~~~~
rdiscount.c:27:7: warning: initializing 'char *' with an expression of type 'const char[13]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "generate_toc", MKD_TOC },
      ^~~~~~~~~~~~~~
rdiscount.c:28:7: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "no_image", MKD_NOIMAGE },
      ^~~~~~~~~~
rdiscount.c:29:7: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "no_links", MKD_NOLINKS },
      ^~~~~~~~~~
rdiscount.c:30:7: warning: initializing 'char *' with an expression of type 'const char[10]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "no_tables", MKD_NOTABLES },
      ^~~~~~~~~~~
rdiscount.c:31:7: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "strict", MKD_STRICT },
      ^~~~~~~~
rdiscount.c:32:7: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "autolink", MKD_AUTOLINK },
      ^~~~~~~~~~
rdiscount.c:33:7: warning: initializing 'char *' with an expression of type 'const char[9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "safelink", MKD_SAFELINK },
      ^~~~~~~~~~
rdiscount.c:34:7: warning: initializing 'char *' with an expression of type 'const char[20]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "no_pseudo_protocols", MKD_NO_EXT },
      ^~~~~~~~~~~~~~~~~~~~~
rdiscount.c:35:7: warning: initializing 'char *' with an expression of type 'const char[15]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "no_superscript", MKD_NOSUPERSCRIPT },
      ^~~~~~~~~~~~~~~~
rdiscount.c:36:7: warning: initializing 'char *' with an expression of type 'const char[17]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "no_strikethrough", MKD_NOSTRIKETHROUGH },
      ^~~~~~~~~~~~~~~~~~
rdiscount.c:37:7: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "latex", MKD_LATEX },
      ^~~~~~~
rdiscount.c:38:7: warning: initializing 'char *' with an expression of type 'const char[13]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "explicitlist", MKD_EXPLICITLIST },
      ^~~~~~~~~~~~~~
rdiscount.c:39:7: warning: initializing 'char *' with an expression of type 'const char[10]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "md1compat", MKD_1_COMPAT },
      ^~~~~~~~~~~
rdiscount.c:91:48: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
    MMIOT *doc = mkd_string(RSTRING_PTR(text), RSTRING_LEN(text), flags);
                 ~~~~~~~~~~                    ^~~~~~~~~~~~~~~~~
/opt/homebrew/Cellar/ruby/3.2.2/include/ruby-3.2.0/ruby/internal/core/rstring.h:52:27: note: expanded from macro 'RSTRING_LEN'
#define RSTRING_LEN       RSTRING_LEN
                          ^
rdiscount.c:130:48: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
    MMIOT *doc = mkd_string(RSTRING_PTR(text), RSTRING_LEN(text), flags);
                 ~~~~~~~~~~                    ^~~~~~~~~~~~~~~~~
/opt/homebrew/Cellar/ruby/3.2.2/include/ruby-3.2.0/ruby/internal/core/rstring.h:52:27: note: expanded from macro 'RSTRING_LEN'
#define RSTRING_LEN       RSTRING_LEN
                          ^
17 warnings generated.
compiling resource.c
In file included from resource.c:17:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
2 warnings generated.
compiling setup.c
In file included from setup.c:17:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
2 warnings generated.
compiling tags.c
In file included from tags.c:17:
./blocktags:2:6: warning: initializing 'char *' with an expression of type 'const char[2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "P", 1, 0 },
     ^~~
./blocktags:3:6: warning: initializing 'char *' with an expression of type 'const char[3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "DL", 2, 0 },
     ^~~~
./blocktags:4:6: warning: initializing 'char *' with an expression of type 'const char[3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "H1", 2, 0 },
     ^~~~
./blocktags:5:6: warning: initializing 'char *' with an expression of type 'const char[3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "H2", 2, 0 },
     ^~~~
./blocktags:6:6: warning: initializing 'char *' with an expression of type 'const char[3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "H3", 2, 0 },
     ^~~~
./blocktags:7:6: warning: initializing 'char *' with an expression of type 'const char[3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "H4", 2, 0 },
     ^~~~
./blocktags:8:6: warning: initializing 'char *' with an expression of type 'const char[3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "H5", 2, 0 },
     ^~~~
./blocktags:9:6: warning: initializing 'char *' with an expression of type 'const char[3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "H6", 2, 0 },
     ^~~~
./blocktags:10:6: warning: initializing 'char *' with an expression of type 'const char[3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "HR", 2, 1 },
     ^~~~
./blocktags:11:6: warning: initializing 'char *' with an expression of type 'const char[3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "OL", 2, 0 },
     ^~~~
./blocktags:12:6: warning: initializing 'char *' with an expression of type 'const char[3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "UL", 2, 0 },
     ^~~~
./blocktags:13:6: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "BDO", 3, 0 },
     ^~~~~
./blocktags:14:6: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "DFN", 3, 0 },
     ^~~~~
./blocktags:15:6: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "DIV", 3, 0 },
     ^~~~~
./blocktags:16:6: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "MAP", 3, 0 },
     ^~~~~
./blocktags:17:6: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "PRE", 3, 0 },
     ^~~~~
./blocktags:18:6: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "WBR", 3, 0 },
     ^~~~~
./blocktags:19:6: warning: initializing 'char *' with an expression of type 'const char[4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "XMP", 3, 0 },
     ^~~~~
./blocktags:20:6: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "FORM", 4, 0 },
     ^~~~~~
./blocktags:21:6: warning: initializing 'char *' with an expression of type 'const char[5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "NOBR", 4, 0 },
     ^~~~~~
./blocktags:22:6: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "STYLE", 5, 0 },
     ^~~~~~~
./blocktags:23:6: warning: initializing 'char *' with an expression of type 'const char[6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "TABLE", 5, 0 },
     ^~~~~~~
./blocktags:24:6: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "CENTER", 6, 0 },
     ^~~~~~~~
./blocktags:25:6: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "IFRAME", 6, 0 },
     ^~~~~~~~
./blocktags:26:6: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "OBJECT", 6, 0 },
     ^~~~~~~~
./blocktags:27:6: warning: initializing 'char *' with an expression of type 'const char[7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "SCRIPT", 6, 0 },
     ^~~~~~~~
./blocktags:28:6: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "ADDRESS", 7, 0 },
     ^~~~~~~~~
./blocktags:29:6: warning: initializing 'char *' with an expression of type 'const char[8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "LISTING", 7, 0 },
     ^~~~~~~~~
./blocktags:30:6: warning: initializing 'char *' with an expression of type 'const char[10]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "PLAINTEXT", 9, 0 },
     ^~~~~~~~~~~
./blocktags:31:6: warning: initializing 'char *' with an expression of type 'const char[11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   { "BLOCKQUOTE", 10, 0 },
     ^~~~~~~~~~~~
tags.c:30:36: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    if ( !(p = mkd_search_tags(id, strlen(id))) ) {
               ~~~~~~~~~~~~~~~     ^~~~~~~~~~
tags.c:36:12: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
        p->size = strlen(id);
                ~ ^~~~~~~~~~
32 warnings generated.
compiling toc.c
In file included from toc.c:15:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
toc.c:47:20: warning: passing 'const char[2]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                Csprintf(&res, "\n");
                                               ^~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:48:19: warning: passing 'const char[19]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Csprintf(&res, "</li>\n%*s</ul>\n%*s",
                                       ^~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:54:19: warning: passing 'const char[7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Csprintf(&res, "</li>\n");
                                       ^~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:56:19: warning: passing 'const char[2]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Csprintf(&res, "\n");
                                       ^~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:59:19: warning: passing 'const char[9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Csprintf(&res, "%*s<ul>\n", last_hnumber, "");
                                       ^~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:61:23: warning: passing 'const char[9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Csprintf(&res, "%*s<li>\n", last_hnumber+1, "");
                                           ^~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:64:22: warning: passing 'const char[18]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    Csprintf(&res, "%*s<li><a href=\"#", srcp->hnumber, "");
                                   ^~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:69:22: warning: passing 'const char[3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    Csprintf(&res, "\">");
                                   ^~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:72:22: warning: passing 'const char[5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    Csprintf(&res, "</a>");
                                   ^~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:82:17: warning: passing 'const char[19]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Csprintf(&res, "</li>\n%*s</ul>\n%*s",
                       ^~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:107:8: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
        ret = fwrite(buf, 1, sz, out);
            ~ ^~~~~~~~~~~~~~~~~~~~~~~
13 warnings generated.
compiling version.c
version.c:7:5: warning: 'USE_AMALLOC' is not defined, evaluates to 0 [-Wundef]
#if USE_AMALLOC
    ^
version.c:10:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
2 warnings generated.
compiling xml.c
In file included from xml.c:17:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
xml.c:26:24: warning: returning 'const char[5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '<':   return "&lt;";
                       ^~~~~~
xml.c:27:24: warning: returning 'const char[5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '>':   return "&gt;";
                       ^~~~~~
xml.c:28:24: warning: returning 'const char[6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '&':   return "&amp;";
                       ^~~~~~~
xml.c:29:24: warning: returning 'const char[7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '"':   return "&quot;";
                       ^~~~~~~~
xml.c:30:24: warning: returning 'const char[7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '\'':  return "&apos;";
                       ^~~~~~~~
xml.c:33:10: warning: returning 'const char[1]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                return "";
                       ^~
xml.c:49:14: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( entity = mkd_xmlchar(c) )
             ~~~~~~~^~~~~~~~~~~~~~~~
xml.c:49:14: note: place parentheses around the assignment to silence this warning
        if ( entity = mkd_xmlchar(c) )
                    ^
             (                      )
xml.c:49:14: note: use '==' to turn this assignment into an equality comparison
        if ( entity = mkd_xmlchar(c) )
                    ^
                    ==
xml.c:72:14: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( entity = mkd_xmlchar(c) )
             ~~~~~~~^~~~~~~~~~~~~~~~
xml.c:72:14: note: place parentheses around the assignment to silence this warning
        if ( entity = mkd_xmlchar(c) )
                    ^
             (                      )
xml.c:72:14: note: use '==' to turn this assignment into an equality comparison
        if ( entity = mkd_xmlchar(c) )
                    ^
                    ==
xml.c:73:26: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            Cswrite(&f, entity, strlen(entity));
            ~~~~~~~             ^~~~~~~~~~~~~~
11 warnings generated.
compiling xmlpage.c
In file included from xmlpage.c:10:
./markdown.h:9:7: warning: 'HAVE_STDINT_H' is not defined, evaluates to 0 [-Wundef]
#elif HAVE_STDINT_H
      ^
./markdown.h:58:5: warning: 'GITHUB_CHECKBOX' is not defined, evaluates to 0 [-Wundef]
#if GITHUB_CHECKBOX
    ^
xmlpage.c:28:13: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( title = mkd_doc_title(p) ) {
             ~~~~~~^~~~~~~~~~~~~~~~~~
xmlpage.c:28:13: note: place parentheses around the assignment to silence this warning
        if ( title = mkd_doc_title(p) ) {
                   ^
             (                       )
xmlpage.c:28:13: note: use '==' to turn this assignment into an equality comparison
        if ( title = mkd_doc_title(p) ) {
                   ^
                   ==
3 warnings generated.
linking shared-object rdiscount.bundle

current directory: /Users/maurini/Documents/website/cmaurini.github.io/vendor/bundle/ruby/3.2.0/gems/rdiscount-2.2.7/ext
make DESTDIR\= sitearchdir\=./.gem.20230419-34354-7s8eaf sitelibdir\=./.gem.20230419-34354-7s8eaf install
/usr/bin/install -c -m 0755 rdiscount.bundle ./.gem.20230419-34354-7s8eaf

current directory: /Users/maurini/Documents/website/cmaurini.github.io/vendor/bundle/ruby/3.2.0/gems/rdiscount-2.2.7/ext
make DESTDIR\= sitearchdir\=./.gem.20230419-34354-7s8eaf sitelibdir\=./.gem.20230419-34354-7s8eaf clean
